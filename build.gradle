import org.flywaydb.gradle.task.FlywayMigrateTask

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.flywaydb.flyway" version "7.3.0"
    id 'java'
    id "com.gorylenko.gradle-git-properties" version "2.2.4"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

def developmentDbUrl = "jdbc:mysql://localhost:3306/tracker_dev?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
bootRun.environment([
        "WELCOME_MESSAGE": "howdy",
        "SPRING_DATASOURCE_URL": developmentDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
        "MANAGEMENT_HEALTH_PROBES_ENABLED": true,
        "MANAGEMENT_INFO_GIT_MODE": "FULL",
])

def testDbUrl = "jdbc:mysql://localhost:3306/tracker_test?user=tracker&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false"
test.environment([
        "WELCOME_MESSAGE": "Hello from test",
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always",
        "MANAGEMENT_HEALTH_PROBES_ENABLED": true,
        "MANAGEMENT_INFO_GIT_MODE": "FULL",
])

flyway {
    url = developmentDbUrl
    user = "tracker"
    password = ""
    locations = ["filesystem:databases/tracker/migrations"]
}

task devMigrate(type: FlywayMigrateTask) {
    url = developmentDbUrl
}

task testMigrate(type: FlywayMigrateTask) {
    url = testDbUrl
}

springBoot {
    buildInfo()
}

// Customize Git properties plugin.
gitProperties {
    customProperty 'pal-info', 'Course of 2021-03-15'
}